{"remainingRequest":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue?vue&type=template&id=09eb515a","dependencies":[{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue","mtime":1647003375911},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/cache-loader/dist/cjs.js","mtime":1645155088111},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/babel-loader/lib/index.js","mtime":1645155089536},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1645155090402},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/cache-loader/dist/cjs.js","mtime":1645155088111},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/vue-loader-v16/dist/index.js","mtime":1645155089531}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2PgogICAgICAgIDxoMT57eyBlZGl0ID8gIkVkaXQiIDogIkFkZCIgfX08L2gxPgogICAgICAgIDxmb3JtIEBzdWJtaXQucHJldmVudD0ic3VibWl0Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1maWVsZCI+CiAgICAgICAgICAgICAgICA8bGFiZWw+TmFtZTwvbGFiZWw+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdi1tb2RlbD0iZm9ybS5uYW1lIiAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxsYWJlbD5Eb25lPC9sYWJlbD4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgdi1tb2RlbD0iZnJvbS5kb25lIiAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJTdWJtaXQiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZm9ybT4KICAgIDwvZGl2Pgo="},{"version":3,"sources":["/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC;gBACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC;gBACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <h1>{{ edit ? \"Edit\" : \"Add\" }}</h1>\n        <form @submit.prevent=\"submit\">\n            <div class=\"form-field\">\n                <label>Name</label>\n                <br>\n                <input v-model=\"form.name\" />\n            </div>\n            <div>\n                <label>Done</label>\n                <input type=\"checkbox\" v-model=\"from.done\" />\n            </div>\n            <div>\n                <input type=\"submit\" value=\"Submit\" />\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n\n    export default {\n        name: 'TodoForm',\n        data () {\n            return {\n                from: { name: '', done: false }\n            }\n        },\n        props: {\n            edit: Boolean,\n            id: String\n        },\n        methods: {\n            submit() {\n                const { name, done } = this.form\n                if(!name) {\n                    return alert(\"Name is required\")\n                }\n\n                if(this.edit) {\n                    axios.put(`/todo/${this.id}`, { name, done })\n                } else {\n                    axios.post(`/todo/add-todo`, { name, done })\n                }\n                \n                this.$router.push('/todos')\n            },\n            getTodo() {\n                const { data } = axios.get(`/todo/${this.id}`)\n                this.form = data\n            }\n        },\n        beforeMount() {\n            if(this.edit) {\n                this.getTodo()\n            }\n        }\n    }\n</script>\n"]}]}