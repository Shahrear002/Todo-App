{"remainingRequest":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue","mtime":1647003375911},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/cache-loader/dist/cjs.js","mtime":1645155088111},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/babel-loader/lib/index.js","mtime":1645155089536},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/cache-loader/dist/cjs.js","mtime":1645155088111},{"path":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/node_modules/vue-loader-v16/dist/index.js","mtime":1645155089531}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCgogICAgZXhwb3J0IGRlZmF1bHQgewogICAgICAgIG5hbWU6ICdUb2RvRm9ybScsCiAgICAgICAgZGF0YSAoKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBmcm9tOiB7IG5hbWU6ICcnLCBkb25lOiBmYWxzZSB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgIGVkaXQ6IEJvb2xlYW4sCiAgICAgICAgICAgIGlkOiBTdHJpbmcKICAgICAgICB9LAogICAgICAgIG1ldGhvZHM6IHsKICAgICAgICAgICAgc3VibWl0KCkgewogICAgICAgICAgICAgICAgY29uc3QgeyBuYW1lLCBkb25lIH0gPSB0aGlzLmZvcm0KICAgICAgICAgICAgICAgIGlmKCFuYW1lKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFsZXJ0KCJOYW1lIGlzIHJlcXVpcmVkIikKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZih0aGlzLmVkaXQpIHsKICAgICAgICAgICAgICAgICAgICBheGlvcy5wdXQoYC90b2RvLyR7dGhpcy5pZH1gLCB7IG5hbWUsIGRvbmUgfSkKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgYXhpb3MucG9zdChgL3RvZG8vYWRkLXRvZG9gLCB7IG5hbWUsIGRvbmUgfSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy90b2RvcycpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGdldFRvZG8oKSB7CiAgICAgICAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGF4aW9zLmdldChgL3RvZG8vJHt0aGlzLmlkfWApCiAgICAgICAgICAgICAgICB0aGlzLmZvcm0gPSBkYXRhCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGJlZm9yZU1vdW50KCkgewogICAgICAgICAgICBpZih0aGlzLmVkaXQpIHsKICAgICAgICAgICAgICAgIHRoaXMuZ2V0VG9kbygpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cg=="},{"version":3,"sources":["/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue"],"names":[],"mappings":";IAqBI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAExB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;YACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACH,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;YAClC;QACJ,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACH,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACL,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACN,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC;;gBAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAChD,EAAE,CAAC,CAAC,CAAC,EAAE;oBACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC/C;;gBAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACN,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACnB;QACJ,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB;QACJ;IACJ","file":"/Users/shahrear/MyFiles/MyFiles/To-Do-App/client/src/components/TodoForm.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <h1>{{ edit ? \"Edit\" : \"Add\" }}</h1>\n        <form @submit.prevent=\"submit\">\n            <div class=\"form-field\">\n                <label>Name</label>\n                <br>\n                <input v-model=\"form.name\" />\n            </div>\n            <div>\n                <label>Done</label>\n                <input type=\"checkbox\" v-model=\"from.done\" />\n            </div>\n            <div>\n                <input type=\"submit\" value=\"Submit\" />\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n\n    export default {\n        name: 'TodoForm',\n        data () {\n            return {\n                from: { name: '', done: false }\n            }\n        },\n        props: {\n            edit: Boolean,\n            id: String\n        },\n        methods: {\n            submit() {\n                const { name, done } = this.form\n                if(!name) {\n                    return alert(\"Name is required\")\n                }\n\n                if(this.edit) {\n                    axios.put(`/todo/${this.id}`, { name, done })\n                } else {\n                    axios.post(`/todo/add-todo`, { name, done })\n                }\n                \n                this.$router.push('/todos')\n            },\n            getTodo() {\n                const { data } = axios.get(`/todo/${this.id}`)\n                this.form = data\n            }\n        },\n        beforeMount() {\n            if(this.edit) {\n                this.getTodo()\n            }\n        }\n    }\n</script>\n"]}]}